from flask import Flask, render_template, request, jsonify
import stripe
from selenium import webdriver
from selenium.webdriver.common.by import By
from webdriver_manager.chrome import ChromeDriverManager  # New import
import time

app = Flask(__name__)

# Stripe setup (replace with your own secret key)
stripe.api_key = "sk_test_51QJfClGxXpXnuA0iMPMqEgUcIkTWAQpUi05kJrwHFEbpnfQ04jQA6KbLmG4TJWFmUGuPGPB2xSr3MBLbszsuGQJh009A9uqiuI"

@app.route('/')
def index():
    return render_template('index.html.txt')

@app.route('/process-purchase', methods=['POST'])
def process_purchase():
    data = request.json
    invite_link = data['invite_link']
    service = data['service']
    amount = data['amount']

    # Process the payment (optional: Stripe integration)
    try:
        payment_intent = stripe.PaymentIntent.create(
            amount=int(amount) * 100,  # amount in cents
            currency='usd',
            payment_method_types=['card'],
        )
        print(f"Payment confirmed for {amount} members.")

        # After payment, send the bot purchase to Tokenu.net
        send_bot_purchase_to_tokenu(invite_link, service)

        return jsonify({"message": "Purchase successful, bots are being added to your server!"})

    except stripe.error.StripeError as e:
        return jsonify({"message": f"Payment failed: {str(e)}"}), 400

def send_bot_purchase_to_tokenu(invite_link, service_type):
    # Automatically download and manage the correct version of ChromeDriver
    driver = webdriver.Chrome(ChromeDriverManager().install())

    driver.get("https://tokenu.net")

    # Select the service type
    service_dropdown = driver.find_element(By.ID, "service")
    service_dropdown.click()
    service_option = driver.find_element(By.XPATH, f"//option[text()='{service_type}']")
    service_option.click()

    # Enter the Discord invite link
    invite_input = driver.find_element(By.ID, "discord_invite_link")
    invite_input.send_keys(invite_link)

    # Click the "Next" button
    next_button = driver.find_element(By.XPATH, "//button[text()='Next']")
    next_button.click()

    # Wait for confirmation (adjust timing as necessary)
    time.sleep(5)

    # Close the browser
    driver.quit()

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)
